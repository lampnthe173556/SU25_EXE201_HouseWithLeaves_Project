@model IEnumerable<ProjectHouseWithLeaves.Dtos.ProductDTO>
@{
    ViewBag.Title = "Quản lý Sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    var categories = ViewBag.CategoryList as List<ProjectHouseWithLeaves.Models.Category>;
}

<!-- Toast Container -->
<div class="toast-container position-fixed top-0 end-0 p-3">
    <div id="successToast" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">
                <i class="fas fa-check-circle me-2"></i>
                <span id="successMessage"></span>
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
    <div id="errorToast" class="toast align-items-center text-white bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">
                <i class="fas fa-exclamation-circle me-2"></i>
                <span id="errorMessage"></span>
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>

<style>
    .table thead th {
        color: #000;
        font-weight: 600;
        cursor: pointer;
        user-select: none;
    }
    .table thead th.active {
        background-color: #198754 !important;
        color: #000;
    }
    .search-box {
        position: relative;
    }
    .search-box i {
        position: absolute;
        left: 10px;
        top: 50%;
        transform: translateY(-50%);
        color: #6c757d;
    }
    .search-box input {
        padding-left: 30px;
    }
    .product-row {
        transition: all 0.3s ease;
    }
    .product-row.hidden {
        display: none;
    }
    .pagination {
        margin-bottom: 0;
    }
    .pagination .page-link {
        color: #198754;
        cursor: pointer;
    }
    .pagination .page-item.active .page-link {
        background-color: #198754;
        border-color: #198754;
        color: white;
    }
    .pagination .page-item.disabled .page-link {
        color: #6c757d;
        cursor: not-allowed;
    }
    #itemsPerPage {
        width: auto;
        display: inline-block;
    }
    .sortable {
        cursor: pointer;
        position: relative;
    }
    th.sortable::after {
        content: ' \2195'; /* Up-Down Arrow */
        opacity: 0.3;
    }
    th.sortable.asc::after {
        content: ' \2191'; /* Up Arrow */
        opacity: 1;
    }
    th.sortable.desc::after {
        content: ' \2193'; /* Down Arrow */
        opacity: 1;
    }
</style>

<div class="container-fluid">
    @if (TempData["SuccessMessage"] != null)
    {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
    }

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-success fw-bold">
            <i class="fas fa-boxes me-2"></i>Quản lý Sản phẩm
        </h2>
        <button class="btn btn-success" onclick="showCreateProductModal()">
            <i class="fas fa-plus-circle me-1"></i> Thêm sản phẩm
        </button>
    </div>

    <!-- Thanh tìm kiếm và lọc -->
    <div class="card mb-4">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-6">
                    <div class="search-box">
                        <i class="fas fa-search"></i>
                        <input type="text" class="form-control" id="searchInput" 
                               placeholder="Tìm kiếm theo tên, mô tả, kích thước..." />
                    </div>
                </div>
                <div class="col-md-3">
                    <select class="form-select" id="categoryFilter">
                        <option value="">Tất cả danh mục</option>
                        @foreach (var cat in categories)
                        {
                                <option value="@cat.CategoryId">@cat.CategoryName</option>
                        }
                    </select>
                </div>
            </div>
        </div>
    </div>

    <!-- Bảng sản phẩm -->
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-success">
                        <tr>
                            <th class="sortable" data-sort="productId" style="width: 80px">
                                #
                            </th>
                            <th style="width: 100px">Hình ảnh</th>
                            <th class="sortable" data-sort="productName">
                                Sản phẩm
                            </th>
                            <th class="sortable" data-sort="price" class="text-end" style="width: 150px">
                                Giá
                            </th>
                            <th class="sortable" data-sort="quantityInStock" class="text-center" style="width: 100px">
                                Tồn kho
                            </th>
                            <th class="sortable" data-sort="categoryName" style="width: 200px">
                                Danh mục
                            </th>
                            <th style="width: 100px">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model)
                        {
                                <tr class="product-row" 
                                    data-name="@product.Name.ToLower()" 
                                    data-description="@(product.Description?.ToLower() ?? "")" 
                                    data-size="@(product.Size?.ToLower() ?? "")"
                                    data-category="@product.CategoryId">
                                    <td>@product.Id</td>
                                    <td>
                                    @if (!string.IsNullOrEmpty(product.MainImage))
                                    {
                                                <img src="@product.MainImage" alt="@product.Name" class="img-thumbnail" style="width: 80px; height: 80px; object-fit: cover;" />
                                    }
                                    else
                                    {
                                                <div class="text-center text-muted">
                                                    <i class="fas fa-image fa-2x"></i>
                                                </div>
                                    }
                                    </td>
                                    <td>
                                        <div>@product.Name</div>
                                    @if (!string.IsNullOrEmpty(product.Size))
                                    {
                                                <small class="text-muted">Kích thước: @product.Size</small>
                                    }
                                    </td>
                                    <td class="text-end">@product.Price.ToString("N0") VNĐ</td>
                                    <td class="text-center">@product.Stock</td>
                                    <td>@product.CategoryName</td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-success" onclick="showEditProductModal(@product.Id)">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger" onclick="deleteProduct(@product.Id)">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="d-flex justify-content-between align-items-center mt-3">
                <div class="d-flex align-items-center">
                    <span class="me-2">Hiển thị</span>
                    <select class="form-select form-select-sm" id="itemsPerPage">
                        <option value="5">5</option>
                        <option value="10" selected>10</option>
                        <option value="20">20</option>
                        <option value="50">50</option>
                    </select>
                    <span class="ms-2">dòng mỗi trang</span>
                </div>
                <nav>
                    <ul class="pagination" id="pagination">
                        <!-- Phân trang sẽ được thêm bằng JavaScript -->
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

<!-- Form thêm sản phẩm -->
<div class="modal fade" id="createProductModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title">Thêm sản phẩm mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="createProductForm" action="@Url.Action("Create", "Product", new { area = "Admin" })" method="post" enctype="multipart/form-data">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">Tên sản phẩm</label>
                            <input type="text" class="form-control" name="Name" required />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Giá</label>
                            <div class="input-group">
                                <input type="number" class="form-control" name="Price" required min="0" />
                                <span class="input-group-text">VNĐ</span>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Số lượng</label>
                            <input type="number" class="form-control" name="Stock" required min="0" />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Danh mục</label>
                            <select name="CategoryId" class="form-select" required>
                                <option value="">Chọn danh mục</option>
                                @foreach (var cat in categories)
                                {
                                        <option value="@cat.CategoryId">@cat.CategoryName</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Kích thước</label>
                            <input type="text" class="form-control" name="Size" required />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Hình ảnh chính</label>
                            <input type="file" class="form-control" name="mainImage" accept="image/*" onchange="previewImage(this, 'mainImagePreview')" />
                            <img id="mainImagePreview" class="mt-2" style="max-width: 200px; display: none;" />
                        </div>
                        <div class="col-12">
                            <label class="form-label">Hình ảnh phụ</label>
                            <input type="file" class="form-control" name="additionalImages" accept="image/*" multiple onchange="previewAdditionalImages(this)" />
                            <div id="additionalImagesPreview" class="mt-2 d-flex gap-2"></div>
                        </div>
                        <div class="col-12">
                            <label class="form-label">Mô tả</label>
                            <textarea class="form-control" name="Description" rows="3"></textarea>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="submit" form="createProductForm" class="btn btn-success">
                    <i class="fas fa-save me-1"></i> Lưu sản phẩm
                </button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-1"></i> Hủy
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal chỉnh sửa sản phẩm -->
<div class="modal fade" id="editProductModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title">Chỉnh sửa sản phẩm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editProductForm" action="@Url.Action("Edit", "Product", new { area = "Admin" })" method="post" enctype="multipart/form-data">
                    <input type="hidden" id="editProductId" name="Id" />
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">Tên sản phẩm</label>
                            <input type="text" class="form-control" id="editProductName" name="Name" required />
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Giá</label>
                            <div class="input-group">
                                <input type="number" class="form-control" id="editPrice" name="Price" required min="0" />
                                <span class="input-group-text">VNĐ</span>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Số lượng</label>
                            <input type="number" class="form-control" id="editQuantity" name="Stock" required min="0" />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Danh mục</label>
                            <select id="editCategoryId" name="CategoryId" class="form-select" required>
                                <option value="">Chọn danh mục</option>
                                @foreach (var cat in categories)
                                {
                                        <option value="@cat.CategoryId">@cat.CategoryName</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Kích thước</label>
                            <input type="text" class="form-control" id="editSize" name="Size" required />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Hình ảnh chính mới</label>
                            <input type="file" class="form-control" name="mainImage" accept="image/*" onchange="previewImage(this, 'editMainImagePreview')" />
                            <img id="editMainImagePreview" class="mt-2" style="max-width: 200px; display: none;" />
                            <img id="currentMainImage" class="mt-2" style="max-width: 200px;" />
                        </div>
                        <div class="col-12">
                            <label class="form-label">Hình ảnh phụ</label>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Ảnh phụ 1</label>
                                        <input type="file" class="form-control" name="additionalImage1" accept="image/*" onchange="previewImage(this, 'editAdditionalImage1Preview')" />
                                        <img id="editAdditionalImage1Preview" class="mt-2" style="max-width: 200px; display: none;" />
                                        <img id="currentAdditionalImage1" class="mt-2" style="max-width: 200px;" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Ảnh phụ 2</label>
                                        <input type="file" class="form-control" name="additionalImage2" accept="image/*" onchange="previewImage(this, 'editAdditionalImage2Preview')" />
                                        <img id="editAdditionalImage2Preview" class="mt-2" style="max-width: 200px; display: none;" />
                                        <img id="currentAdditionalImage2" class="mt-2" style="max-width: 200px;" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-12">
                            <label class="form-label">Mô tả</label>
                            <textarea class="form-control" id="editDescription" name="Description" rows="3"></textarea>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="submit" form="editProductForm" class="btn btn-success">
                    <i class="fas fa-save me-1"></i> Lưu thay đổi
                </button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-1"></i> Hủy
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
        <script>
            $(document).ready(function() {
                // Khởi tạo biến
                let currentSort = {
                    column: 'productId',
                    direction: 'asc'
                };
                let currentPage = 1;
                let itemsPerPage = 10;

                // Tìm kiếm realtime
                function filterProducts() {
                    const searchTerm = $('#searchInput').val().toLowerCase();
                    const categoryId = $('#categoryFilter').val();

                    $('.product-row').each(function() {
                        const $row = $(this);
                        const name = $row.data('name');
                        const description = $row.data('description');
                        const size = $row.data('size');
                        const category = $row.data('category').toString();

                        const matchesSearch = !searchTerm || 
                            name.includes(searchTerm) || 
                            description.includes(searchTerm) || 
                            size.includes(searchTerm);

                        const matchesCategory = !categoryId || category === categoryId;

                        if (matchesSearch && matchesCategory) {
                            $row.removeClass('d-none');
                        } else {
                            $row.addClass('d-none');
                        }
                    });

                    // Reset về trang 1 và cập nhật phân trang
                    currentPage = 1;
                    updatePagination();
                }

                // Sắp xếp
                function sortTable(column) {
                    const $tbody = $('tbody');
                    const $rows = $tbody.find('tr').toArray();
                    const $th = $(`th[data-sort="${column}"]`);

                    // Cập nhật direction
                    if (currentSort.column === column) {
                        currentSort.direction = currentSort.direction === 'asc' ? 'desc' : 'asc';
                    } else {
                        currentSort.column = column;
                        currentSort.direction = 'asc';
                    }

                    // Cập nhật UI
                    $('th').removeClass('active');
                    $th.addClass('active');
                    $th.find('i').attr('class', `fas fa-sort-${currentSort.direction === 'asc' ? 'up' : 'down'}`);

                    // Sắp xếp
                    $rows.sort(function(a, b) {
                        let aValue, bValue;

                        switch(column) {
                            case 'productId':
                                aValue = parseInt($(a).find('td:first').text());
                                bValue = parseInt($(b).find('td:first').text());
                                break;
                            case 'price':
                                aValue = parseInt($(a).find('td:nth-child(4)').text().replace(/[^\d]/g, ''));
                                bValue = parseInt($(b).find('td:nth-child(4)').text().replace(/[^\d]/g, ''));
                                break;
                            case 'quantityInStock':
                                aValue = parseInt($(a).find('td:nth-child(5)').text());
                                bValue = parseInt($(b).find('td:nth-child(5)').text());
                                break;
                            case 'productName':
                                aValue = $(a).find('td:nth-child(3) div').text().toLowerCase();
                                bValue = $(b).find('td:nth-child(3) div').text().toLowerCase();
                                break;
                            case 'categoryName':
                                aValue = $(a).find('td:nth-child(6)').text().toLowerCase();
                                bValue = $(b).find('td:nth-child(6)').text().toLowerCase();
                                break;
                        }

                        if (currentSort.direction === 'asc') {
                            return aValue > bValue ? 1 : aValue < bValue ? -1 : 0;
                        } else {
                            return aValue < bValue ? 1 : aValue > bValue ? -1 : 0;
                        }
                    });

                    // Cập nhật DOM
                    $tbody.empty();
                    $rows.forEach(function(row) {
                        $tbody.append(row);
                    });

                    // Reset về trang 1 và cập nhật phân trang
                    currentPage = 1;
                    updatePagination();
                }

                // Phân trang
                function updatePagination() {
                    const $rows = $('.product-row:not(.d-none)');
                    const totalItems = $rows.length;
                    const totalPages = Math.ceil(totalItems / itemsPerPage);

                    // Ẩn/hiện các dòng theo trang hiện tại
                    $rows.each(function(index) {
                        const shouldShow = index >= (currentPage - 1) * itemsPerPage && index < currentPage * itemsPerPage;
                        $(this).toggleClass('hidden', !shouldShow);
                    });

                    // Cập nhật UI phân trang
                    const $pagination = $('#pagination');
                    $pagination.empty();

                    // Nút Previous
                    $pagination.append(`
                        <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                            <a class="page-link" data-page="${currentPage - 1}">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                    `);

                    // Các nút số trang
                    for (let i = 1; i <= totalPages; i++) {
                        if (
                            i === 1 || // Trang đầu
                            i === totalPages || // Trang cuối
                            (i >= currentPage - 1 && i <= currentPage + 1) // Các trang xung quanh trang hiện tại
                        ) {
                            $pagination.append(`
                                <li class="page-item ${i === currentPage ? 'active' : ''}">
                                    <a class="page-link" data-page="${i}">${i}</a>
                                </li>
                            `);
                        } else if (
                            i === currentPage - 2 || 
                            i === currentPage + 2
                        ) {
                            $pagination.append(`
                                <li class="page-item disabled">
                                    <a class="page-link">...</a>
                                </li>
                            `);
                        }
                    }

                    // Nút Next
                    $pagination.append(`
                        <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                            <a class="page-link" data-page="${currentPage + 1}">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    `);

                    // Gắn sự kiện cho các nút phân trang
                    $('.page-link[data-page]').on('click', function() {
                        const newPage = parseInt($(this).data('page'));
                        if (!isNaN(newPage) && newPage !== currentPage && newPage > 0 && newPage <= totalPages) {
                            currentPage = newPage;
                            updatePagination();
                        }
                    });
                }

                // Gắn sự kiện
                $(document).on('input', '#searchInput', function() {
                    filterProducts();
                });
                $(document).on('change', '#categoryFilter', function() {
                    filterProducts();
                });

                $('th[data-sort]').on('click', function() {
                    const column = $(this).data('sort');
                    sortTable(column);
                });

                $('#itemsPerPage').on('change', function() {
                    itemsPerPage = parseInt($(this).val());
                    currentPage = 1;
                    updatePagination();
                });

                // Khởi tạo ban đầu
                sortTable('productId');
                updatePagination();
            });

            function showToast(message, isSuccess = true) {
                const toastId = isSuccess ? 'successToast' : 'errorToast';
                const messageId = isSuccess ? 'successMessage' : 'errorMessage';
                const toast = document.getElementById(toastId);
                document.getElementById(messageId).textContent = message;
                const bsToast = new bootstrap.Toast(toast);
                bsToast.show();
            }

            function previewImage(input, previewId) {
                const preview = document.getElementById(previewId);
                if (input.files && input.files[0]) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        preview.src = e.target.result;
                        preview.style.display = 'block';
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }

            // --- Sửa preview ảnh phụ khi cập nhật (triệt để) ---
            $(document).off('change', '#editProductForm input[name="additionalImages"]');
            $(document).on('change', '#editProductForm input[name="additionalImages"]', function() {
                // Ẩn hoàn toàn ảnh phụ cũ
                $('#currentAdditionalImages').css('display', 'none');
                // Xóa toàn bộ preview mới trước khi render
                $('#editAdditionalImagesPreview').empty();

                if (this.files && this.files.length > 0) {
                    const files = Array.from(this.files).slice(0, 2);
                    files.forEach(file => {
                        const reader = new FileReader();
                        const img = document.createElement('img');
                        img.style.maxWidth = '200px';
                        img.style.marginRight = '10px';
                        img.style.marginBottom = '10px';
                        reader.onload = function(e) {
                            img.src = e.target.result;
                        }
                        reader.readAsDataURL(file);
                        $('#editAdditionalImagesPreview').append(img);
                    });
                } else {
                    // Nếu không chọn file, hiện lại ảnh phụ cũ
                    $('#currentAdditionalImages').css('display', '');
                }
            });

            // Reset preview khi đóng modal
            $('#editProductModal').on('hidden.bs.modal', function() {
                $('#currentAdditionalImages').css('display', '');
                $('#editAdditionalImagesPreview').empty();
                $('#editProductForm input[name="additionalImages"]').val('');
            });

            function showCreateProductModal() {
                // Reset form
                $('#createProductForm')[0].reset();
                $('#mainImagePreview').hide();
                $('#additionalImagesPreview').empty();
                $('#createProductModal').modal('show');
            }

            function previewSingleImage(input, previewId) {
                const preview = document.getElementById(previewId);
                const currentImage = document.getElementById(previewId.replace('Preview', ''));

                if (input.files && input.files[0]) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        preview.src = e.target.result;
                        preview.style.display = 'block';
                        currentImage.style.display = 'none';
                    }
                    reader.readAsDataURL(input.files[0]);
                } else {
                    preview.style.display = 'none';
                    currentImage.style.display = 'block';
                }
            }

            function showEditProductModal(productId) {
                $.get('@Url.Action("GetProduct", "Product", new { area = "Admin" })/' + productId, function(response) {
                    if (response.success) {
                        const product = response.data;
                        $('#editProductId').val(product.id);
                        $('#editProductName').val(product.name);
                        $('#editPrice').val(product.price);
                        $('#editQuantity').val(product.stock);
                        $('#editCategoryId').val(product.categoryId);
                        $('#editSize').val(product.size);
                        $('#editDescription').val(product.description);

                        // Hiển thị ảnh hiện tại
                        $('#currentMainImage').attr('src', product.mainImage);
                        $('#editMainImagePreview').hide();

                        // Hiển thị ảnh phụ hiện tại
                        if (product.additionalImages && product.additionalImages.length > 0) {
                            $('#currentAdditionalImage1').attr('src', product.additionalImages[0] || '');
                            $('#currentAdditionalImage2').attr('src', product.additionalImages[1] || '');
                        }

                        // Ẩn tất cả preview ảnh mới
                        $('#editAdditionalImage1Preview').hide();
                        $('#editAdditionalImage2Preview').hide();

                        $('#editProductModal').modal('show');
                    } else {
                        showToast('Không thể tải thông tin sản phẩm', false);
                    }
                });
            }

            // Reset preview khi đóng modal
            $('#editProductModal').on('hidden.bs.modal', function() {
                // Reset ảnh chính
                $('#currentMainImage').show();
                $('#editMainImagePreview').hide();
                $('#editProductForm input[name="mainImage"]').val('');

                // Reset ảnh phụ 1
                $('#currentAdditionalImage1').show();
                $('#editAdditionalImage1Preview').hide();
                $('#editProductForm input[name="additionalImage1"]').val('');

                // Reset ảnh phụ 2
                $('#currentAdditionalImage2').show();
                $('#editAdditionalImage2Preview').hide();
                $('#editProductForm input[name="additionalImage2"]').val('');
            });

            // Xử lý sự kiện khi chọn ảnh mới trong form edit
            $(document).on('change', '#editProductForm input[name="mainImage"]', function() {
                if (this.files && this.files[0]) {
                    $('#currentMainImage').hide();
                    previewImage(this, 'editMainImagePreview');
                } else {
                    $('#currentMainImage').show();
                    $('#editMainImagePreview').hide();
                }
            });

            $(document).on('change', '#editProductForm input[name="additionalImage1"]', function() {
                if (this.files && this.files[0]) {
                    $('#currentAdditionalImage1').hide();
                    previewImage(this, 'editAdditionalImage1Preview');
                } else {
                    $('#currentAdditionalImage1').show();
                    $('#editAdditionalImage1Preview').hide();
                }
            });

            $(document).on('change', '#editProductForm input[name="additionalImage2"]', function() {
                if (this.files && this.files[0]) {
                    $('#currentAdditionalImage2').hide();
                    previewImage(this, 'editAdditionalImage2Preview');
                } else {
                    $('#currentAdditionalImage2').show();
                    $('#editAdditionalImage2Preview').hide();
                }
            });

            // Xử lý submit form
            $('#createProductForm').on('submit', function(e) {
                e.preventDefault();
                const formData = new FormData(this);

                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(response) {
                        $('#createProductModal').modal('hide');
                        showToast('Thêm sản phẩm thành công');
                        setTimeout(() => window.location.reload(), 1000);
                    },
                    error: function() {
                        showToast('Có lỗi xảy ra khi thêm sản phẩm', false);
                    }
                });
            });

            $('#editProductForm').on('submit', function(e) {
                e.preventDefault();
                const formData = new FormData(this);

                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(response) {
                        $('#editProductModal').modal('hide');
                        showToast('Cập nhật sản phẩm thành công');
                        setTimeout(() => window.location.reload(), 1000);
                    },
                    error: function() {
                        showToast('Có lỗi xảy ra khi cập nhật sản phẩm', false);
                    }
                });
            });

            // Hiển thị toast từ TempData
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                    showToast('@TempData["SuccessMessage"]');
            </text>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                    showToast('@TempData["ErrorMessage"]', false);
            </text>
        }
        </script>
} 